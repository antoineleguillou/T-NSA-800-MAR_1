# vote ENV
apiVersion: v1
kind: ConfigMap
metadata:
  name: vote-configmap
data:
  option_a: "Cats"
  option_b: "Dogs"
  prefix: ""
  redis_port: "6379"
---
# vote ENV SECRETS (BASE64)
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: vote-secrets
data:
  # redis-cluster-leader-headless.redis-operator.svc.cluster.local
  redis_host: cmVkaXMtY2x1c3Rlci1sZWFkZXItaGVhZGxlc3MucmVkaXMtb3BlcmF0b3Iuc3ZjLmNsdXN0ZXIubG9jYWw=
  # Nc89JggdSC1I180
  redis_password: TmM4OUpnZ2RTQzFJMTgw
  # redis://:Nc89JggdSC1I180@redis-cluster-leader-headless.redis-operator.svc.cluster.local:6379/0
  redis_cluster_uri: cmVkaXM6Ly86TmM4OUpnZ2RTQzFJMTgwQHJlZGlzLWNsdXN0ZXItbGVhZGVyLWhlYWRsZXNzLnJlZGlzLW9wZXJhdG9yLnN2Yy5jbHVzdGVyLmxvY2FsOjYzNzkvMA==
---
# vote DEPLOYMENT
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vote-deployment
  labels:
    tier: vote
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  replicas: 3
  selector:
    matchLabels:
      tier: vote
  template:
    metadata:
      labels:
        tier: vote
    spec:
      containers:
        - name: vote
          image: ttl.sh/f2367553-9968-43e5-bc61-be501c323fbf:24h
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 350m
              memory: 450Mi
            requests:
              cpu: 300m
              memory: 320Mi
          env:
            # APP
            - name: PREFIX
              valueFrom:
                configMapKeyRef:
                  name: vote-configmap
                  key: prefix
            - name: OPTION_A
              valueFrom:
                configMapKeyRef:
                  name: vote-configmap
                  key: option_a
            - name: OPTION_B
              valueFrom:
                configMapKeyRef:
                  name: vote-configmap
                  key: option_b
            # REDIS
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: vote-configmap
                  key: redis_port
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: vote-secrets
                  key: redis_host
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: vote-secrets
                  key: redis_password
            - name: REDIS_CLUSTER_URI
              valueFrom:
                secretKeyRef:
                  name: vote-secrets
                  key: redis_cluster_uri
          ports:
            - containerPort: 80
      restartPolicy: Always
---
# vote SERVICES
apiVersion: v1
kind: Service
metadata:
  name: vote-service
spec:
  selector:
    tier: vote
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      name: http
